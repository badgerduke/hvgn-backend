AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  GetFamilyByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs8.10
      Handler: get-family-by-id.handler
      CodeUri: get-family-by-id/
      Timeout: 300
      Environment:
        Variables:
          PRIVATE_YEAR: 1912
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:Query
              Resource: 'arn:aws:dynamodb:us-east-1:093879445146:*'
      Events:
        GetFamilyByIdApi:
          Type: Api
          Properties:
            Path: "/family/{id}"
            Method: get
            RestApiId: !Ref HvgnApi

  HvgnApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      EndpointConfiguration: REGIONAL
      DefinitionBody:
        swagger: "2.0"
        info:
          title: "HvgnApi"
        securityDefinitions:
          api_key:
            type: "apiKey"
            name: "x-api-key"
            in: "header"  
        paths:
          /family/{id}:
            get:
              parameters:
              - name: "id"
                in: "path"
                required: true
                type: "string"
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetFamilyByIdFunction.Arn}/invocations
                responses: {}
                httpMethod: "POST"
                type: "aws_proxy"
              security:
                - api_key: []
            options:
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Headers:
                      type: string
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'http://hvgn.s3-website-us-east-1.amazonaws.com'"
                      method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
                passthroughBehavior: when_no_match
                requestTemplates:
                  application/json: "{\"statusCode\": 200}"
                type: mock
                
  DomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: arn:aws:acm:us-east-1:093879445146:certificate/cdf58f85-f50f-45b6-a48e-2b23c3fb81dd
      DomainName: api.hvgn.net

  LambdaDNS:
    Type: AWS::Route53::RecordSet
    DependsOn:
      - HvgnApi
    Properties:
      Name: api.hvgn.net.
      HostedZoneName: hvgn.net.
      Type: 'A'
      Comment: Zone apex alias targeted to ApiGateway
      AliasTarget:
        HostedZoneId: !GetAtt DomainName.DistributionHostedZoneId
        DNSName: !GetAtt DomainName.DistributionDomainName

  UrlMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: 
      - HvgnApi
    Properties:
      DomainName: !Ref DomainName
      RestApiId: !Ref HvgnApi
      Stage: prod

  ApiKey: 
    Type: AWS::ApiGateway::ApiKey
    DependsOn: 
      - UrlMapping
    Properties: 
      Name: !Join ["", [{"Ref": "AWS::StackName"}, "-apikey"]]
      Description: "CloudFormation API Key V1"
      Enabled: true
      GenerateDistinctId: false
      Value: h0Gk2JQ8jOn38m5zPy1S0K4m
      StageKeys:
        - RestApiId: !Ref HvgnApi
          StageName: prod

  ApiUsagePlan:
    Type: "AWS::ApiGateway::UsagePlan"
    DependsOn: 
      - UrlMapping
    Properties:
      ApiStages: 
        - ApiId: !Ref HvgnApi
          Stage: prod     
      Description: !Join [" ", [{"Ref": "AWS::StackName"}, "usage plan"]]
      Quota:
        Limit: 1000
        Period: MONTH
      UsagePlanName: !Join ["", [{"Ref": "AWS::StackName"}, "-usage-plan"]]

  ApiUsagePlanKey:
    Type: "AWS::ApiGateway::UsagePlanKey"
    DependsOn: 
      - HvgnApi
    Properties:
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref ApiUsagePlan